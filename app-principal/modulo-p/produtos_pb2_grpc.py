# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import produtos_pb2 as produtos__pb2


class CatalogoStub(object):
    """----------------- SERVIÇO A: CATÁLOGO -----------------

    """

    def _init_(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfoBasica = channel.unary_unary(
                '/Catalogo/GetInfoBasica',
                request_serializer=produtos__pb2.ProdutoRequest.SerializeToString,
                response_deserializer=produtos__pb2.InfoBasicaResponse.FromString,
                )


class CatalogoServicer(object):
    """----------------- SERVIÇO A: CATÁLOGO -----------------

    """

    def GetInfoBasica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CatalogoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfoBasica': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfoBasica,
                    request_deserializer=produtos__pb2.ProdutoRequest.FromString,
                    response_serializer=produtos__pb2.InfoBasicaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Catalogo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


class InventarioStub(object):
    """----------------- SERVIÇO B: INVENTÁRIO -----------------

    """

    def _init_(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEstoque = channel.unary_unary(
                '/Inventario/GetEstoque',
                request_serializer=produtos__pb2.ProdutoRequest.SerializeToString,
                response_deserializer=produtos__pb2.EstoqueResponse.FromString,
                )


class InventarioServicer(object):
    """----------------- SERVIÇO B: INVENTÁRIO -----------------

    """

    def GetEstoque(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventarioServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEstoque': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEstoque,
                    request_deserializer=produtos__pb2.ProdutoRequest.FromString,
                    response_serializer=produtos__pb2.EstoqueResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Inventario', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Catalogo(object):
    """----------------- SERVIÇO A: CATÁLOGO -----------------

    """

    @staticmethod
    def GetInfoBasica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Catalogo/GetInfoBasica',
            produtos__pb2.ProdutoRequest.SerializeToString,
            produtos__pb2.InfoBasicaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata)


 # This class is part of an EXPERIMENTAL API.
class Inventario(object):
    """----------------- SERVIÇO B: INVENTÁRIO -----------------

    """

    @staticmethod
    def GetEstoque(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Inventario/GetEstoque',
            produtos__pb2.ProdutoRequest.SerializeToString,
            produtos__pb2.EstoqueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata)